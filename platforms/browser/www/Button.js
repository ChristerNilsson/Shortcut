// Generated by CoffeeScript 1.11.1
var Button;

Button = (function() {
  function Button(parent, y, x, w, h, key1, txt) {
    this.parent = parent;
    this.y = y;
    this.x = x;
    this.w = w;
    this.h = h;
    this.key = key1;
    this.txt = txt;
    this.w0 = 99;
    this.h0 = 99;
  }

  Button.prototype.draw = function() {
    g.push();
    g.translate(width * this.x / 60, height * this.y / 60);
    this.x0 = g.x;
    this.y0 = g.y;
    this.w0 = g.s * width * this.w / 60 - 2;
    this.h0 = g.s * height * this.h / 60 - 2;
    fill(255, 127);
    rect(0, 0, height * this.h / 60 - 2, width * this.w / 60 - 2);
    fill(0);
    textSize(this.h0 / 3);
    text(this.txt, 0, 0);
    return g.pop();
  };

  Button.prototype.mousePressed = function() {
    if ((this.x0 - this.w0 / 2 <= mouseX && mouseX <= this.x0 + this.w0 / 2) && (this.y0 - this.h0 / 2 <= mouseY && mouseY <= this.y0 + this.h0 / 2)) {
      this.parent.process(this.key);
    }
    return false;
  };

  Button.prototype.touchStarted = function() {
    var ref, ref1, touch;
    touch = touches[touches.length - 1];
    if ((this.x0 - this.w0 / 2 <= (ref = touch.x) && ref <= this.x0 + this.w0 / 2) && (this.y0 - this.h0 / 2 <= (ref1 = touch.y) && ref1 <= this.y0 + this.h0 / 2)) {
      this.parent.process(this.key);
    }
    return false;
  };

  Button.prototype.keyPressed = function(key) {
    if (this.key === key) {
      return this.parent.process(this.key);
    }
  };

  return Button;

})();
