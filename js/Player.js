// Generated by CoffeeScript 1.12.7
var Player;

Player = (function() {
  var digits;

  function Player(keys, x, y, w, h) {
    this.w = w;
    this.h = h;
    this.M = 120;
    this.N = 60;
    this.keys = keys;
    this.x = width * x / this.M;
    this.y = height * y / this.N;
    this.history = [3];
    this.target = 2;
    this.count = 0;
    this.level = 0;
    this.buttons = [];
    this.buttons.push(new Button(this, -10, -5, 7.5, 15, "", "3"));
    this.buttons.push(new Button(this, 10, -5, 7.5, 15, "", "2"));
    this.buttons.push(new Button(this, 0, -5, 7.5, 15, keys[0], "undo"));
    this.buttons.push(new Button(this, -10, 15, 7.5, 15, keys[1], "/2"));
    this.buttons.push(new Button(this, 0, 15, 7.5, 15, keys[2], "+2"));
    this.buttons.push(new Button(this, 10, 15, 7.5, 15, keys[3], "*2"));
  }

  Player.prototype.draw = function() {
    var button, j, len, ref;
    if (this.keys === "WASD") {
      if (this.target === this.top()) {
        fc(0, 1, 0);
      } else {
        fc(1, 1, 0);
      }
    } else {
      if (this.target === this.top()) {
        fc(0, 1, 0);
      } else {
        fc(1, 0, 0);
      }
    }
    rect(0, 0, width * this.w / this.M, height * this.h / this.N);
    this.buttons[0].txt = this.top().toString();
    this.buttons[1].txt = this.target.toString();
    ref = this.buttons;
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      button.draw();
    }
    textSize(height / 20);
    fc(0.5);
    return text(this.level - this.history.length + 1, 0, height * 0.45);
  };

  Player.prototype.process = function(key) {
    if (this.target === this.top()) {
      return;
    }
    if (key === this.keys[0] && this.history.length > 1) {
      this.history.pop();
    }
    if (key === this.keys[1] && this.top() % 2 === 0) {
      this.save(this.top() / 2);
    }
    if (key === this.keys[2]) {
      this.save(this.top() + 2);
    }
    if (key === this.keys[3]) {
      return this.save(this.top() * 2);
    }
  };

  Player.prototype.save = function(value) {
    var d, ms;
    this.count++;
    this.history.push(value);
    if (this.target === this.top()) {
      d = new Date();
      ms = d.getTime();
      return this.stopp = int(ms);
    }
  };

  Player.prototype.mousePressed = function() {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.mousePressed());
    }
    return results;
  };

  Player.prototype.touchStarted = function(x, y) {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.touchStarted(x, y));
    }
    return results;
  };

  Player.prototype.keyPressed = function(key) {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.keyPressed(key));
    }
    return results;
  };

  Player.prototype.score = function() {
    return (this.stopp - this.start) / 1000 + this.count * 10;
  };

  Player.prototype.top = function() {
    return this.history[this.history.length - 1];
  };

  Player.prototype.finished = function() {
    return this.top() === this.target;
  };

  Player.prototype.perfect = function(level) {
    return this.finished() && this.count <= level;
  };

  digits = function(x) {
    if (x < 100) {
      return x.toFixed(3);
    }
    if (x < 1000) {
      return x.toFixed(2);
    }
    if (x < 10000) {
      return x.toFixed(1);
    }
    return x.toFixed(0);
  };

  Player.prototype.result = function() {
    var H, dx, i, j, len, n, number, ref, results, x, x0, y;
    n = 20;
    if (this.stopp === 0) {
      return;
    }
    fill(this.color);
    H = height / n;
    textSize(H);
    if (this.keys === "WASD") {
      x0 = -width / 8;
      dx = -width / 8;
    } else {
      x0 = width / 8;
      dx = width / 8;
    }
    text(digits(this.score()), x0, -9.5 * H);
    ref = this.history;
    results = [];
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      number = ref[i];
      x = int(i / (n - 1));
      y = int(i % (n - 1));
      results.push(text(number, x0 + x * dx, -8.5 * H + y * H));
    }
    return results;
  };

  return Player;

})();

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\github\Shortcut\coffee\Player.coffee